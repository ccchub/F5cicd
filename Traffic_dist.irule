## This irule is an enabler for A/B Testing. See below regarding A/B Testing
## https://www.f5.com/company/blog/open-source-spotlight-f5-enables-a-b-testing-and-blue-green-deployments-with-red-hat-openshift
## This irule pays special attention to minimising the number of cookie encryption/decryption operations. ## An encryption operation only happens at the first HTTP response, on the first TCP connection.
## A decryption operation only happens at the first HTTP request, on subsequent new TCP connections.
## e.g. A browser makes multiple TCP connections to a site, all of which share the same cookie
## This irule is not compatible with OneConnect

when RULE_INIT {
    set static::encryption_passphrase "abcd1234"
    set static::cookiename "pool"
    set static::distribution 0.50
}

when HTTP_REQUEST {
    set virtual_prefix [string trim [string trimleft [string tolower [virtual name]] "/common/"] "_vs"]
    set new 0
    switch $static::distribution {
        "0" {
            pool ${virtual_prefix}_blue_pool
        }
        "1" {
            pool ${virtual_prefix}_green_pool
        }
        default {
            # New TCP session
            if { [HTTP::request_num] == 1 and !([HTTP::cookie exists pool])} {
                set rand [expr { rand()}]
                if {$rand < $static::distribution}{
                    pool ${virtual_prefix}_blue_pool
                    set pool_selector ${virtual_prefix}_blue_pool
                    set new 1
                }
                else {
                    pool ${virtual_prefix}_green_pool
                    set pool_selector ${virtual_prefix}_green_pool
                    set new 1
                } 
            } elseif { [HTTP::request_num] == 1 && [HTTP::cookie exists pool] } {
                set pool_selector [HTTP::cookie decrypt $static::cookiename $static::encryption_passphrase]
                switch -glob $pool_selector {
                    "*blue_pool" {
                        pool ${virtual_prefix}_blue_pool
                        set pool_selector ${virtual_prefix}_blue_pool
                    }
                    "*green_pool" {
                        pool ${virtual_prefix}_green_pool
                        set pool_selector ${virtual_prefix}_green_pool
                    }
                }
            }
        }
    }
}

#NOT COMPITABLE WITH ONECONNECT
when HTTP_RESPONSE {
    if { $new } {
        HTTP::cookie insert name $static::cookiename value $pool_selector
        HTTP::cookie encrypt $static::cookiename $static::encryption_passphrase
    }
}